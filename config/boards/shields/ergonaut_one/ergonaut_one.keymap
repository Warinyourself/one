#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/international_chars/greek.dtsi"
#include "../zmk-nodefree-config/international_chars/french.dtsi"

#define DEF 0
#define LWR 1
#define FNL 2
#define STL 3
#define UCL 4
#define GML 5
#define AGL 6
#define ADL 7

ZMK_UNICODE_SINGLE(el_prod,        N0, N0,  D, N7) // ×
ZMK_UNICODE_SINGLE(dotdotdot,      N2, N0, N2, N6) // …
ZMK_UNICODE_PAIR(hard_sign,        N0, N4, N4,  A,  N0, N4, N2,  A) // Cyrillic Small Letter Hard Sign ъ
ZMK_UNICODE_PAIR(io,               N0, N4, N5, N1,  N0, N4, N0, N1) // Cyrillic Small Letter Io ё
ZMK_UNICODE_PAIR(shcha,            N0, N4, N4, N9,  N0, N4, N2, N9) // Cyrillic Capital Letter Shcha щ
ZMK_UNICODE_SINGLE(orthodox_cross, N2, N6, N2, N6) // Orthodox Cross ☦
ZMK_UNICODE_SINGLE(laquo,          N0, N0,  A,  B) // Left-Pointing Double Angle Quotation Mark «
ZMK_UNICODE_SINGLE(raquo,          N0, N0,  B,  B) // Right-Pointing Double Angle Quotation Mark »
ZMK_UNICODE_SINGLE(ruble_sign,     N2, N0,  B,  D) // Russian Ruble ₽
ZMK_UNICODE_SINGLE(yen_sign,       N0, N0,  A, N5) // Yen Sign ¥
ZMK_UNICODE_SINGLE(pound_sign,     N0, N0,  A, N3) // Pound Sign £
ZMK_UNICODE_SINGLE(euro_sign,      N0, N0,  E, N9) // Euro €
ZMK_UNICODE_SINGLE(sect_sign,      N0, N0,  A, N7) // Section Sign §
ZMK_UNICODE_SINGLE(reg_sign,       N0, N0,  A,  E) // Registered Sign ®
ZMK_UNICODE_SINGLE(copy_sign,      N0, N0,  A, N9) // Copyright Sign ©
ZMK_UNICODE_SINGLE(ring_sign,      N0, N2,  D,  A) // Ring Above ˚
ZMK_UNICODE_SINGLE(sqrt_sign,      N2, N2, N1,  A) // Square root √

&lt {
    quick-tap-ms = <200>;
};

&mt {
    quick-tap-ms = <200>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        ToMain {
            bindings = <&to DEF>;
            key-positions = <1 2 3 4>;
        };

        ToGameMode {
            bindings = <&to GML>;
            key-positions = <13 14 15 16>;
        };

        SystemLayout {
            bindings = <&to STL>;
            key-positions = <15 16 19 20>;
        };
    };

    behaviors {
        hr: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        bmt: balanced_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "BALANCED_MOD_TABS";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <300>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT-LAYER {
            bindings = <
                &none     &kp Q       &kp W       &kp E         &kp R             &kp T           &kp Y        &kp U                 &kp I         &kp O       &kp P               &none
                &none     &hr LGUI A  &hr LALT S  &hr LSHIFT D  &hr LCTRL F       &kp G           &kp H        &hr LCTRL J           &hr LSHIFT K  &hr LALT L  &hr LGUI SEMICOLON  &none
                &none     &kp Z       &kp X       &kp C         &kp V             &kp B           &kp N        &kp M                 &kp COMMA     &kp DOT     &kp FSLH            &none
                                                  &sl FNL       &bmt LCTRL SPACE  &sl ADL         &lt UCL TAB  &bmt RSHFT BACKSPACE  &lt 1 DEL
            >;
        };

        NUMBER-LAYER {
            bindings = <
                &none     &kp F1             &kp F2             &kp F3               &kp F4              &kp F5        &kp F6        &kp F7              &kp F8               &kp F9             &kp F10            &none
                &none     &hr LGUI NUMBER_1  &hr LALT NUMBER_2  &hr LSHIFT NUMBER_3  &hr LCTRL NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &hr LCTRL NUMBER_7  &hr LSHIFT NUMBER_8  &hr LALT NUMBER_9  &hr LGUI NUMBER_0  &none
                &none     &kp EXCL           &kp AT             &kp HASH             &kp DLLR            &kp PRCNT     &kp CARET     &kp AMPS            &kp STAR             &kp LPAR           &kp RPAR           &none
                                                                &trans               &trans              &trans        &trans        &trans              &trans
            >;
        };

        FN-LAYER {
            bindings = <
                &none      &kp KP_SLASH            &kp KP_N7         &kp KP_N8         &kp KP_N9           &kp KP_MINUS     &kp CLCK         &kp HOME    &kp PSCRN  &kp PG_UP  &kp SLCK         &none
                &none      &hr LGUI KP_MULTIPLY    &hr LALT KP_N4    &hr LSHIFT KP_N5  &hr LCTRL KP_N6     &kp KP_PLUS      &kp KP_NUM       &kp LEFT    &kp UP     &kp RIGHT  &kp INS          &none
                &none      &kp KP_N0               &kp KP_N1         &kp KP_N2         &kp KP_N3           &kp KP_DOT       &none            &kp END     &kp DOWN   &kp PG_DN  &kp PAUSE_BREAK  &none
                                                                     &trans            &trans              &trans           &trans           &trans      &trans
            >;
        };

        SETTING-LAYER {
            bindings = <
                &none   &bootloader        &none         &none         &none         &none         &none         &none         &none         &none         &bootloader   &none
                &none   &bt BT_SEL 0       &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &none
                &none   &bt BT_CLR         &sys_reset    &none         &none         &none         &none         &none         &none         &sys_reset    &bt BT_CLR    &none
                                                         &trans        &trans        &trans        &trans        &trans        &trans
            >;
        };

        SPECIAL-LAYER {
            bindings = <
                &none  &el_psi    &el_omega   &euro_sign  &reg_sign   &io        &yen_sign    &el_lambda       &shcha  &trans  &trans  &none
                &none  &el_alpha  &sect_sign  &ring_sign  &el_sigma   &el_gamma  &ruble_sign  &orthodox_cross  &trans  &laquo  &raquo  &none
                &none  &el_mu     &el_prod    &copy_sign  &sqrt_sign  &el_beta   &el_eta      &hard_sign       &trans  &trans  &trans  &none
                                              &trans      &kp RSHFT   &trans     &trans       &trans           &trans
            >;
        };

        GAME-LAYER {
            bindings = <
                &none     &kp Q       &kp W       &kp E         &kp R         &kp T           &kp Y        &kp U                 &kp I         &kp O       &kp P               &none
                &none     &kp A       &kp S       &kp D         &kp F         &kp G           &kp H        &hr LCTRL J           &hr LSHIFT K  &hr LALT L  &hr LGUI SEMICOLON  &none
                &none     &kp Z       &kp X       &kp C         &kp V         &kp B           &kp N        &kp M                 &kp COMMA     &kp DOT     &kp FSLH            &none
                                                  &sl AGL       &kp LALT      &sl ADL         &trans       &trans                &trans
            >;
        };

        GAME-ALT-LAYER {
            bindings = <
                &none     &kp F1             &kp F2             &kp F3               &kp F4              &kp F5          &kp F7        &kp F8              &kp F9               &kp F10            &kp F11            &none
                &none     &kp NUMBER_1       &kp NUMBER_2       &kp NUMBER_3         &kp NUMBER_4        &kp NUMBER_5    &kp NUMBER_6  &hr LCTRL NUMBER_7  &hr LSHIFT NUMBER_8  &hr LALT NUMBER_9  &hr LGUI NUMBER_0  &none
                &none     &kp NUMBER_6       &kp NUMBER_7       &kp NUMBER_8         &kp NUMBER_9        &kp NUMBER_0    &kp CARET     &kp AMPS            &kp STAR             &kp LPAR           &kp RPAR           &none
                                                                &trans               &kp LALT            &trans          &trans        &trans              &trans
            >; 
        };

        ADDITIONAL-LAYER {
            bindings = <
                &none    &kp RBKT          &kp LGUI            &kp LSHIFT           &kp LCTRL           &kp TAB         &kp C_NEXT        &kp C_VOL_UP     &none             &none              &kp LBKT           &none
                &none    &kp GRAVE         &kp LS(LC(TAB))     &kp LC(TAB)          &kp ENTER           &kp ESCAPE    &kp C_PLAY        &kp C_MUTE       &none             &none              &kp SQT            &none
                &none    &kp MINUS         &kp PLUS            &kp EQUAL            &kp SPACE           &none         &kp C_PREVIOUS    &kp C_VOL_DN     &none             &none              &kp BSLH           &none
                                                               &trans               &trans              &trans        &trans            &trans           &trans
            >;
        };
    };
};
